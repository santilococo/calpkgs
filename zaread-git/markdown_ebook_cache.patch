diff --git a/README.md b/README.md
index 4061d3c..4558454 100644
--- a/README.md
+++ b/README.md
@@ -5,10 +5,16 @@ This simple bash script needs libreoffice installed and has zathura pdf reader a
 
 At work I often need to open doc, docx, ppt, pptx files in read only mode. I hate libreoffice interface with all those buttons (useless if I just need to view file content), and I hate presentation mode, because it forces fullscreen mode and I want the freedom to open Office files in a "normal" window, considering that I have a tiling wm.
 
-So... I created this trivial script that can be used as default PDF/DOC/DOCX/ODF/PPT/PPTX/etc reader. It just:
+So... I created this trivial script that can be used as default PDF/DOC/DOCX/ODF/PPT/PPTX/MD/etc reader. It just:
 - converts the argument file to pdf using libreoffice embedded converter (soffice --converto-to);
 - open it with zathura (a very very VERY lightweight PDF reader) or if it's not installed with user's favourite app.
 
 Note: If you don't have zathura installed and you want to adopt another PDF reader (which I don't recommend, nothing IMO fits this script better than zathura), please the first time you use the script execute it from terminal, so that you can select your favourite one; otherwise you can just open the script with a text editor and set it as $reader.
 
+## Usage
+1. Clone the repository and `cd` into it
+2. Run `chmod +x zaread` to make it executable as a script
+3. Run `ln -sv $(pwd)/zaread /usr/bin` to make script executable from anywhere (optional)
+4. Run <code>zaread **file**</code> replace **file** with any PDF/DOC/DOCX/ODF/PPT/PPTX/MD file to open it using zathura or any reader that was set as `$reader` in the script file
+
 Feel free to use and edit :)
diff --git a/zaread b/zaread
index 6759ff8..4ebde0a 100644
--- a/zaread
+++ b/zaread
@@ -2,7 +2,7 @@
 ## zaread - a simple script created by paoloap.
 
 # default variables
-zadir="$HOME"'/.zaread/'
+zadir="$HOME"'/.cache/zaread/'
 reader="zathura"
 
 # if ~/.zaread doesn't exist, we create it.
@@ -56,7 +56,11 @@ else
   if [[ ( ! -f "$zadir$pdffile" ) || ( ! "$check" == `cat "$zadir"cksum/"$file".check` ) ]]; then
     # if it's a mobi file, then convert it to epub (the command depends on calibre)
     if [[ "$file" =~ ^.*\.mobi$ ]]; then
-      ebook-converter "$directory""$file" "$directory"`echo "$file" | sed 's/mobi$/epub/'`
+      ebook-convert "$directory""$file" "$zadir"`echo "$file" | sed 's/mobi$/epub/'`
+      pdffile=`echo "$file" | rev | cut -d'.' -f2- | rev`".epub"
+    # convert markdown to pdf using pandoc
+    elif [[ "$file" =~ ^.*\.md$ ]]; then
+      pandoc "$directory""$file" -o "$zadir""$pdffile" 
     else
       libreoffice --convert-to pdf "$directory""$file" --headless --outdir "$zadir"
     fi
