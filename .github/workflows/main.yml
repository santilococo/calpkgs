name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  allPackages:
    runs-on: ubuntu-latest
    env:
      cancelJob: false
    strategy:
      fail-fast: false
      matrix:
        pkgName:
#          - zaread
          - libxft-bgra
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      
      - name: Check modified files
        run: |
          git diff --name-only HEAD HEAD^ | grep -q "${{ matrix.pkgName }}" || echo "cancelJob=true" >> $GITHUB_ENV
      
      - name: Makepkg build, check and generate .SRCINFO
        if: ${{ env.cancelJob == 'false' }}
        uses: santilococo/pkgbuild-action@master
        with:
          pkgdir: "${{ matrix.pkgName }}"
       
      - name: Push .SRCINFO
        if: ${{ env.cancelJob == 'false' }}
        run: |
          git config --local user.name "$(git log --format=%an | head -n 1)"
          git config --local user.email "$(git log --format=%ae | head -n 1)"
          msg="Update" && [ -f "${{ matrix.pkgName }}/.SRCINFO" ] || msg="Add"
          mv .SRCINFO "${{ matrix.pkgName }}"
          if [ ! -z "$(git status --porcelain)" ]; then
            git add "${{ matrix.pkgName }}/.SRCINFO"
            git pull
            git commit -m "$msg ${{ matrix.pkgName }}/.SRCINFO"
            git push
          fi
       
      - name: Push to AUR
#        if: ${{ env.cancelJob == 'false' }}
        run: |
        
          if [ ! -d $HOME/.ssh ] ; then
            mkdir -m 0700 $HOME/.ssh
          fi

          ssh-keyscan -H aur.archlinux.org > $HOME/.ssh/known_hosts
          echo "${{ secrets.AUR_SSH_KEY }}" > $HOME/.ssh/aur
          chmod 0400 $HOME/.ssh/aur
          ssh-keygen -vy -f $HOME/.ssh/aur > $HOME/.ssh/aur.pub

          git config --local user.name "$(git log --format=%an | head -n 1)"
          git config --local user.email "$(git log --format=%ae | head -n 1)"
          
          git checkout --orphan ${{ matrix.pkgName }}
          git rm -rf .
          git remote add ${{ matrix.pkgName }} ssh://aur@aur.archlinux.org/${{ matrix.pkgName }}.git
          git pull ${{ matrix.pkgName }} master
          git checkout master ${{ matrix.pkgName }}
          mv ${{ matrix.pkgName }}/PKGBUILD .
          mv ${{ matrix.pkgName }}/.SRCINFO .
          rm -rf ${{ matrix.pkgName }}
          if [ ! -z "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Update ${{ matrix.pkgName }}"
            git push --set-upstream libxft-bgra libxft-bgra:master
          fi
#          msg="git log --format=%s | head -n 1"
#          git commit -m "$msg"
